---
import { Icon } from 'astro-icon';
import {
    Container,
	Button,
	CtaCardSection,
    ThreeColumnTextSection,
	TextSection,
} from '@littlesticks/odyssey-theme-components';
import Layout from '../layouts/Page.astro';

const seo = {
	title: "Aaron's Kit | Donate",
	description: 'Learn how to donate or receive ALGO.',
};
import TextAndImageHero from '../components/sections/heros/TextAndImageHero.astro';

var apiSmartContractInfo = "https://api-service-mrz6aygprq-oa.a.run.app/api/donations/smartcontract-info"
var apiSmartContractState = "https://api-service-mrz6aygprq-oa.a.run.app/api/donations/smartcontract-state"
var apiAccounts = "https://api-service-mrz6aygprq-oa.a.run.app/api/accounts"

console.log(" ** params ** ", apiSmartContractInfo, apiSmartContractState, apiAccounts);

var amountForDist = null
var smartContractInfo = null

const responseSmartContractInfo = await fetch(apiSmartContractInfo);

if (responseSmartContractInfo.status === 200) {
    smartContractInfo = await responseSmartContractInfo.json();
    amountForDist = smartContractInfo["amount_for_distribution"]/1000000

}

var smartContractState = null
var totalDist = null

const responseSmartContractState = await fetch(apiSmartContractState);

if (responseSmartContractState.status === 200) {
    smartContractState = await responseSmartContractState.json();
    totalDist = smartContractState["total_distributed"]/1000000

}

var accounts = []
var totalAccounts = null

const responseAccounts = await fetch(apiAccounts);

if (responseAccounts.status === 200) {
    accounts = await responseAccounts.json();
    totalAccounts = accounts.length


}


---


<Layout {seo}>
	<TextSection>
		<h1 style="text-align:center;">
			Donate ALGO
		</h1>
		<h3 style="text-align:center;">You can help keep the Aaron's Kit community alive by rewarding contributors for their hard work.</h3>
	</TextSection>

    <CtaCardSection>
        <div class = "stats">
            <div class = "align-stats">        
                <p>{amountForDist}</p>
                <p>ALGO in current donation pot</p>
            </div>
            <div class = "align-stats">
                <p>{totalDist}</p>
                <p>ALGO distributed to date</p>
            </div>
            <div class = "align-stats">
                <p>{totalAccounts}</p>
                <p>accounts contributing</p>
            </div>        
        </div>
    </CtaCardSection>



    

    <div class="center-button">
        <button id='distribute' onclick="distribute()">Distribute</button>
    </div>


	<ThreeColumnTextSection>
		<div slot="column-1-body" class="column">
			<h2>What?</h2>
			<p> 
				You can donate ALGO (a cryptocurrency native to the Algorand blockchain) 
                to our smart contract which periodically distributes a pot of donations to all 
                the Aaron’s Kit users who have contributed research papers.
			</p>
            <div class="center-button">
                <Button href="https://www.algorand.foundation/the-algo" slot="column-1-cta" newTab outlined>What is ALGO?</Button>
            </div>
		</div>
		
        <div slot="column-2-body" class="column">
			<h2>Why?</h2>
			<p>
				Your donation will reward Aaron’s Kit users for the time and effort 
                they spend contributing research papers. 
                The contribution of research papers fuels the Open Access Movement, and 
                keeps the Aaron’s Kit community alive.
			</p>
            <div class="center-button">
                <Button href="/search" slot="column-2-cta" outlined>View our database</Button>
            </div>
		</div>


		<div slot="column-3-body" class="column">
			<h2>How?</h2>
			<p>
				You can donate by simply sending ALGO to the address of our smart contract. 
                <br>
                <br>
                You may use the listed smart contract address or QR code shown in the 
                donation section below.
            </p>
            <div class="center-button">
                <Button href="#donation_information" slot="column-3-cta" outlined>Learn how to donate</Button>
            </div>			
		</div>

	</ThreeColumnTextSection>

    <CtaCardSection>
		<div>
			<h3><a id="algorand_address">Making a donation: Smart contract information</a></h3>
            <p>To make an ALGO donation you can use our smart contract address:</p>
            <p><b>ZH6QHCFO4UKUHDKFMTJDAQDMEN<br class="hidden-ss">WOFRKAKQCOC4RWBE54MJKCOBXCPO6OHE</b></p>
            
            
            <p>Or simply scan the below QR code with your Algorand wallet (e.g. Pera Wallet):</p>
            <img
                src="/assets/images/donate/SmartContractQR.png"
                alt="Smart Contract QR code"
                id="home-hero-image"
                class="center-img"
            />
            <br>
			<p>
				You can also view our smart contract on the explorer <a href="https://testnet.algoexplorer.io/address/ZH6QHCFO4UKUHDKFMTJDAQDMENWOFRKAKQCOC4RWBE54MJKCOBXCPO6OHE" class="astro-426S6YDN" target="_blank">here</a>.
            </p>
		</div>

	</CtaCardSection>

    <TextSection>
        <h3 style="text-align:center">From scraping to distributing ALGO: how does this work?</h3>
        <span class="img-container">
            <img
            src="/assets/images/donate/HowThisWorks1.svg"
            alt="How this works"
            loading="lazy"
            />
        </span>
    </TextSection>


    <TextAndImageHero reversed>
        <div slot="text-container">
            <ul>
                <li><a id="donation_information">We recommend using </a> the <a href="https://perawallet.app/" class="astro-426S6YDN" target="_blank">Pera Wallet</a> to create an Algorand account.</li>
                <li>To get ALGO to donate, we recommend researching the best practices of purchasing cryptocurrency that comply with your local jurisdiction. As a starting point, we recommend taking a look at <a href="https://www.binance.com" class="astro-426S6YDN" target="_blank">Binance</a> as they are well supported in many countries.</li>
                <li>You donate by simply sending ALGO to the address of our smart contract. You may use the <a href = "#algorand_address">listed address or QR code</a>.</li>
            </ul>
            <br>
        </div>		
        <picture  slot="image-container">
            <img
                src="/assets/images/donate/Donor.svg"
                alt="Donor Information"
                id="home-hero-image"
            />
        </picture>
    </TextAndImageHero>

    <TextAndImageHero reversed>
        <div slot="text-container">
            <ul>
                <li>You must have an Algorand Address to receive donations.</li>
                <li>You will be prompted to create or provide an Algorand address when you contribute research papers.</li>
            </ul>
            <h4 style="text-align:center">You are rewarded as follows:</h4>
            <p style="text-align:center">donation received = (number of papers you scraped / total number of papers scraped by everyone) * (balance of smart contract - minimum balance requirement*)</p>
            <br>
            <div class="center-button">
                <Button href="/get-started" customIcon>
                    Become a contributor<Fragment slot="icon">
                        <Icon name="ic:baseline-chevron-right" />
                    </Fragment>
                </Button>
            </div>            
        </div>


        <picture slot="image-container">
            <img
                src="/assets/images/donate/Contributor.svg"
                alt="Contributor Information"
                id="home-hero-image"
            />
        </picture>
    </TextAndImageHero>

</Layout>

<script is:inline>


    function distribute() {

        var apiDistribute = "https://api-service-mrz6aygprq-oa.a.run.app/api/donations/distribute?distributeToken=oMxlKWyIEOprvUlikQiuCUbWcXLlGyeajLtetxmeeKDSWLeQRV"

        console.log(" ** params ** ", apiDistribute);

        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function() { 
            if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                console.log(xmlHttp.responseText);
        }
        xmlHttp.open("GET", apiDistribute, true); // true for asynchronous 
        xmlHttp.send(null);

        // var listTransactions = []
        // var totalTransactions = null

        // const responseDistribute = fetch(apiDistribute);

        // if (responseDistribute.status !== 200) {
        //     console.log('Looks like there was a problem. Status Code: ' + responseDistribute.status);
        //     return;
        // }

        // listTransactions = await responseDistribute.json();
        // totalTransactions = listTransactions.length

        // if (responseDistribute.status == 200 && totalTransactions > 0) {
        //     console.log('Looks like there is nothing to distribute');
        //     return;

        // }

        // location.reload();

    }

</script>

<style>
    .img-container {
        margin: 0 auto;
        /* max-width: var(--container-max-width-narrow); */
        display: flex;
		padding-top: 0px;
	}
	.center-button {
		display: flex;
  		justify-content: center;
  		align-items: center;
	}
    .column {
		min-height: 256px;
	}
    .center-img {
		display: block;
		margin-left: auto;
		margin-right: auto;
		width: 50%;
		width: auto;
		height: auto;
	}
    @media (min-width: 700px) {
    .hidden-ss {
        display: none !important;
    }
    }
    .cta-card__container {
        margin: 0 auto;
        max-width: var(--container-max-width-narrow);
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }
    .stats {
        display: flex;
        justify-content: space-between;
        width: 100%;
    }
    .align-stats {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

</style>